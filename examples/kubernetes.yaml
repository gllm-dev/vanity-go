---
# Deployment for vanity-go server
apiVersion: apps/v1
kind: Deployment
metadata:
  name: vanity-go
  labels:
    app: vanity-go
spec:
  replicas: 2
  selector:
    matchLabels:
      app: vanity-go
  template:
    metadata:
      labels:
        app: vanity-go
    spec:
      containers:
      - name: vanity-go
        image: ghcr.io/gllm-dev/vanity-go:latest
        imagePullPolicy: Always
        ports:
        - containerPort: 8080
          name: http
        env:
        - name: VANITY_DOMAIN
          value: "go.gllm.dev"
        - name: VANITY_REPOSITORY
          value: "https://github.com/yourusername"
        # Optional: Configure from ConfigMap
        # envFrom:
        # - configMapRef:
        #     name: vanity-go-config
        resources:
          requests:
            memory: "64Mi"
            cpu: "50m"
          limits:
            memory: "128Mi"
            cpu: "100m"
        livenessProbe:
          httpGet:
            path: /
            port: http
          initialDelaySeconds: 10
          periodSeconds: 30
        readinessProbe:
          httpGet:
            path: /
            port: http
          initialDelaySeconds: 5
          periodSeconds: 10
        securityContext:
          runAsNonRoot: true
          runAsUser: 1000
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
          capabilities:
            drop:
            - ALL

---
# Service to expose vanity-go
apiVersion: v1
kind: Service
metadata:
  name: vanity-go
  labels:
    app: vanity-go
spec:
  type: ClusterIP
  ports:
  - port: 80
    targetPort: http
    protocol: TCP
    name: http
  selector:
    app: vanity-go

---
# Optional: ConfigMap for configuration
apiVersion: v1
kind: ConfigMap
metadata:
  name: vanity-go-config
data:
  VANITY_DOMAIN: "go.gllm.dev"
  VANITY_REPOSITORY: "https://github.com/gllm-dev"

---
# Ingress for external access
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: vanity-go
  annotations:
    # nginx.ingress.kubernetes.io/rewrite-target: /
    # cert-manager.io/cluster-issuer: "letsencrypt-prod"
    # nginx.ingress.kubernetes.io/ssl-redirect: "true"
spec:
  ingressClassName: nginx
  tls:
  - hosts:
    - go.gllm.dev
    secretName: vanity-go-tls
  rules:
  - host: go.gllm.dev
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: vanity-go
            port:
              number: 80

---
# Optional: HorizontalPodAutoscaler
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: vanity-go
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: vanity-go
  minReplicas: 2
  maxReplicas: 10
  metrics:
  - type: Resource
    resource:
      name: cpu
      target:
        type: Utilization
        averageUtilization: 70
  - type: Resource
    resource:
      name: memory
      target:
        type: Utilization
        averageUtilization: 80

---
# Optional: PodDisruptionBudget for high availability
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  name: vanity-go
spec:
  minAvailable: 1
  selector:
    matchLabels:
      app: vanity-go